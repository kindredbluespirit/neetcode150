class PrefixTree:

    def __init__(self):
        self.d = {}

    def insert(self, word: str) -> None:
        if word == "":
            self.d[''] = PrefixTree()
            return
        
        val = word[0]
        if val not in self.d:
            self.d[val] = PrefixTree()
        # print(list(self.d))
        self.d[val].insert(word[1:])


    def search(self, word: str) -> bool:
        if word == "":
            if word in self.d:
                return True
            return False
            
        if word[0] not in self.d:
            return False
        
        return self.d[word[0]].search(word[1:])

    def startsWith(self, prefix: str) -> bool:
        if prefix == "":
            return True

        if prefix[0] not in self.d:
            return False

        return self.d[prefix[0]].startsWith(prefix[1:])
        
